"""""""""""""""""""""""""""""""""""""
" Vundle
"""""""""""""""""""""""""""""""""""""
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"""""""""""""""""""""""""""""""""""""
" Plugins
"""""""""""""""""""""""""""""""""""""
" Syntax
Plugin 'othree/yajs.vim'
Plugin 'mxw/vim-jsx'
Plugin 'elzr/vim-json'
Plugin 'kchmck/vim-coffee-script'
Plugin 'iloginow/vim-stylus'
Plugin 'digitaltoad/vim-pug'

" Formatting and Linting
Plugin 'editorconfig/editorconfig-vim'
Plugin 'mattn/emmet-vim'
Plugin 'w0rp/ale'

" Snippets
Plugin 'honza/vim-snippets'
Plugin 'epilande/vim-es2015-snippets'
Plugin 'epilande/vim-react-snippets'

" Utils
Plugin 'tpope/vim-surround'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'justinmk/vim-sneak'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-sleuth'
Plugin 'tpope/vim-vinegar'
Plugin 'ervandew/supertab'
Plugin 'SirVer/ultisnips'
Plugin 'valloric/youcompleteme'
Plugin 'Raimondi/delimitMate'
Plugin 'tomtom/tcomment_vim'
Plugin 'skwp/greplace.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'takac/vim-hardtime'

" Themes
Plugin 'mhartington/oceanic-next'

" UI
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'chrisbra/Colorizer'
Plugin 'airblade/vim-gitgutter'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'ryanoasis/vim-devicons'

"""""""""""""""""""""""""""""""""""""
" END Plugins
"""""""""""""""""""""""""""""""""""""

call vundle#end()            " required
filetype plugin indent on    " required

syntax enable
syntax on

"""""""""""""""""""""""""""""""""""""
" Editor Config
"""""""""""""""""""""""""""""""""""""
" Theme
set background=dark
let g:oceanic_next_terminal_bold = 1
let g:oceanic_next_terminal_italic = 1
colorscheme OceanicNext

" Line Numbers
set number
set relativenumber
set cursorline
" set cursorcolumn
" Wrap text
set wrap
" Tabs
set ts=2 sts=2 sw=2 expandtab
" Whitespaces
set listchars=tab:▸\ ,space:·,eol:¬
" Cursor
if $TERM_PROGRAM =~ "iTerm.app"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

"""""""""""""""""""""""""""""""""""""
" Mappings Config
"""""""""""""""""""""""""""""""""""""
let mapleader = ' '
" Saving and quiting
nnoremap <leader>w :w<cr>
nnoremap <leader>wq :w<cr>:q<cr>
nnoremap <leader>q :q<cr>
nnoremap <leader>qf :q!<cr>
" Sourcing
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap <leader>so :w<cr> :source $MYVIMRC<cr>
nnoremap <leader>sup :w<cr> :source $MYVIMRC<cr> :PluginInstall<cr>
" Plugin Manager commands
nnoremap <leader>pi :PluginInstall<cr>
nnoremap <leader>pc :PluginClean<cr>
nnoremap <leader>pu :PluginUpdate<cr>
" Quick vimrc edit
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
" Convenience
inoremap kj <esc>
inoremap <esc> <nop>
nnoremap <leader>lb <C-^>
nnoremap <leader>ht :HardTimeToggle<cr>
" Toggle commands
nnoremap <leader>n :set relativenumber!<CR>
nnoremap <leader>ws :set list!<CR>
"Search Highlight off toggle, toggled on when search is reactivated
nnoremap <leader>h :noh<CR>
" Utility commands
nnoremap <leader>f :ALEFix<CR>
noremap <C-p> :CtrlP<CR>
" Indent In (<) and Indent Out (>)
nnoremap <leader>i <<
nnoremap <leader>o >>
vnoremap <leader>i <gv
vnoremap <leader>o >gv
" Plugin overrides
let g:multi_cursor_select_all_word_key = '<leader>L'
let g:UltiSnipsExpandTrigger='<leader><tab>'
let g:UltiSnipsJumpForwardTrigger='<tab>'

"""""""""""""""""""""""""""""""""""""
" Plugin Config
"""""""""""""""""""""""""""""""""""""
" Airline
let g:airline_theme='base16'
let g:airline_base16_improved_contrast = 1
let g:airline#themes#base16#constant = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'

" Ctrlp
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git'
let g:ctrlp_by_filename = 1
let g:ctrlp_show_hidden = 1
" DelimitMate
let delimitMate_expand_cr=1

" Emmet
let g:user_emmet_settings = {
  \  'javascript.jsx' : {
    \      'extends' : 'jsx',
    \  },
  \}

" Ale
let g:ale_fixers = { 'javascript': ['prettier'], 'json': ['prettier'], 'css': ['prettier'], 'html': ['prettier'] }
let g:ale_javascript_prettier_use_local_config = 1

" Vim Indent Guides
let g:indent_guides_enable_on_vim_startup = 1

"""""""""""""""""""""""""""""""""""""
" Custom Functions
"""""""""""""""""""""""""""""""""""""
" FormatJSON
command! FormatJSON %!python -m json.tool

" Set tabstop, softtabstop and shiftwidth to the same value
" http://vimcasts.org/episodes/tabs-and-spaces
command! -nargs=* Stab call Stab()
function! Stab()
  let l:tabstop = 1 * input('set tabstop = softtabstop = shiftwidth = ')
  if l:tabstop > 0
    let &l:sts = l:tabstop
    let &l:ts = l:tabstop
    let &l:sw = l:tabstop
  endif
  call SummarizeTabs()
endfunction

function! SummarizeTabs()
  try
    echohl ModeMsg
    echon 'tabstop='.&l:ts
    echon ' shiftwidth='.&l:sw
    echon ' softtabstop='.&l:sts
    if &l:et
      echon ' expandtab'
    else
      echon ' noexpandtab'
    endif
  finally
    echohl None
  endtry
endfunction

"""""""""""""""""""""""""""""""""""""
" Theme Alterations
"""""""""""""""""""""""""""""""""""""
hi IndentGuidesOdd  ctermbg=237
hi IndentGuidesEven ctermbg=236
" hi LineNr  ctermbg=0
" hi CursorLineNr  term=bold ctermbg=0 ctermfg=Blue
" hi SignColumn ctermbg=0 ctermfg=15
" hi FoldColumn ctermbg=0 ctermfg=15
" hi Pmenu ctermfg=15 ctermbg=0
